# Generated by Django 5.1.7 on 2025-04-06 00:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефон')),
                ('type_id', models.CharField(choices=[('Passport', 'Паспорт'), ('PersonalID', 'Удостоверение личности')], max_length=55, verbose_name='Документ')),
                ('data_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Реквизиты')),
                ('driver_licence', models.CharField(blank=True, max_length=30, null=True, verbose_name='Водительское удостоверение')),
            ],
        ),
        migrations.CreateModel(
            name='Truck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=30, null=True, verbose_name='Марка')),
                ('registration', models.CharField(max_length=50, unique=True, verbose_name='Гос. номер')),
                ('type_truck', models.CharField(choices=[('DryVan', 'Тентованный'), ('Reefer', 'Рефрижиратор'), ('SideWall', 'Бортовой'), ('DoubleVan', 'Сцепка'), ('FlatBed', 'Трал'), ('Platform', 'Площадка'), ('LowBed', 'Низкорамный')], max_length=55, null=True, verbose_name='Тип кузова')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Примечание')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, editable=False, primary_key=True, serialize=False, unique_for_year='date_open', verbose_name='Номер')),
                ('date_open', models.DateField(verbose_name='Дата')),
                ('is_open', models.BooleanField(default=True, verbose_name='Действующий')),
                ('odometer_start', models.PositiveSmallIntegerField(blank=True, verbose_name='Показание одометра перед выездом')),
                ('odometer_end', models.PositiveSmallIntegerField(blank=True, verbose_name='Показание одометра после возвращения')),
                ('date_close', models.DateField(blank=True, verbose_name='Дата закрытия')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='logistic.driver', verbose_name='Водитель')),
                ('truck', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='logistic.truck', verbose_name='Автомобиль')),
            ],
        ),
    ]
